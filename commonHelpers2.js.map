{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["//~==== Вариант МОЙ ===============================================\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", function (event) {\n    event.preventDefault();\n\n    const delayInput = form.querySelector('input[name=\"delay\"]');\n    const delay = parseInt(delayInput.value);\n\n    const stateInput = form.querySelector('input[name=\"state\"]:checked');\n    const state = stateInput.value;\n\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (state === \"fulfilled\") {\n                resolve(delay);\n            } else {\n                reject(delay);\n            }\n        }, delay);\n    });\n\n    promise.then(\n        (delay) => {\n            iziToast.success({\n                title: \"Success\",\n                message: `✅ Fulfilled promise in ${delay}ms`,\n            });\n        },\n        (delay) => {\n            iziToast.error({\n                title: \"Error\",\n                message: `❌ Rejected promise in ${delay}ms`,\n            });\n        }\n    );\n});\n\n\n//~==== Вариант Alex ===============================================\n\n// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// const form = document.querySelector('.form');\n\n// function delayFunction(delay, state) {\n//     return new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             if (state === 'fulfilled') {\n//                 resolve(`Promise resolved after ${delay} milliseconds`);\n//             } else {\n//                 reject(`Promise rejected after ${delay} milliseconds`);\n//             }\n//         }, delay);\n//     });\n// }\n\n// form.addEventListener('submit', e => {\n//     e.preventDefault();\n\n//     const delay = parseInt(e.target.elements.delay.value, 10);\n//     const state = e.target.elements.state.value;\n\n//     delayFunction(delay, state)\n//         .then(result => {\n//             console.log(result);\n//             iziToast.success({\n//                 title: '',\n//                 message: `${result}`,\n//                 position: 'topRight',\n//             });\n//             e.target.elements.delay.value = '';\n//             e.target.elements.state.value = '';\n//         })\n//         .catch(err => {\n//             console.log(err);\n//             iziToast.error({\n//                 title: '',\n//                 message: `${err}`,\n//                 position: 'topRight',\n//             });\n//         });\n//     e.target.elements.delay.value = '';\n//     e.target.elements.state.value = '';\n// });\n\n//~==== Вариант Лиля ===============================================\n// import iziToast from 'izitoast';\n\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// const formEl = document.querySelector('.form');\n// formEl.addEventListener('submit', createPromise);\n\n// function createPromise(e) {\n//     e.preventDefault();\n\n//     const storedObj = {\n//         delay: parseInt(formEl.elements.delay.value),\n//         state: formEl.elements.state.value,\n//     };\n\n//     const promise = new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             if (storedObj.state === 'fulfilled') {\n//                 resolve(`✅ Fulfilled promise in ${storedObj.delay}ms`);\n//             } else {\n//                 reject(`❌ Rejected promise in ${storedObj.delay}ms`);\n//             }\n//         }, storedObj.delay);\n//     });\n\n//     promise\n//         .then(result => {\n//             iziToast.success({\n//                 position: 'topRight',\n//                 message: result,\n//             });\n//         })\n//         .catch(error => {\n//             iziToast.error({\n//                 position: 'topRight',\n//                 message: error,\n//             });\n//         });\n// }"],"names":["form","event","delayInput","delay","state","resolve","reject","iziToast"],"mappings":"4IAMA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,SAAUC,EAAO,CAC7CA,EAAM,eAAc,EAEpB,MAAMC,EAAaF,EAAK,cAAc,qBAAqB,EACrDG,EAAQ,SAASD,EAAW,KAAK,EAGjCE,EADaJ,EAAK,cAAc,6BAA6B,EAC1C,MAET,IAAI,QAAQ,CAACK,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTF,IAAU,YACVC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAEO,KACHA,GAAU,CACPI,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,0BAA0BJ,CAAK,IACxD,CAAa,CACJ,EACAA,GAAU,CACPI,EAAS,MAAM,CACX,MAAO,QACP,QAAS,yBAAyBJ,CAAK,IACvD,CAAa,CACJ,CACT,CACA,CAAC"}